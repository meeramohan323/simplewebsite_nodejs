name: Build, Push, and Deploy to GKE

on:
  push:
    branches:
      - main  # Trigger workflow on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Authenticate to Google Cloud
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}  # Your GCP service account JSON key

    # Step 3: Set up Google Cloud SDK with gke-gcloud-auth-plugin
    - name: Set up Google Cloud SDK with gke-gcloud-auth-plugin
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true
        install_components: gke-gcloud-auth-plugin

    # Step 4: Verify gke-gcloud-auth-plugin
    - name: Verify gke-gcloud-auth-plugin
      run: |
        echo "Checking gke-gcloud-auth-plugin version"
        gke-gcloud-auth-plugin --version || echo "gke-gcloud-auth-plugin not found!"

    # Step 5: Get GKE credentials
    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials simple-website-cluster --zone europe-west2-b --project ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker gcr.io --quiet
      

    # Step 7: Build Docker image
    - name: Build Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/simple-website:${{ github.sha }} .

    # Step 8: Push Docker image to GCR
    - name: Push Docker image to GCR
      run: |
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/simple-website:${{ github.sha }}

    # Step 9: Deploy to GKE
    - name: Deploy to GKE
      run: |
        kubectl set image deployment/simple-website-deployment simple-website-container=gcr.io/${{ secrets.GCP_PROJECT_ID }}/simple-website:${{ github.sha }}
        kubectl apply -f k8s-deployment.yaml
        kubectl apply -f k8s-service.yaml
