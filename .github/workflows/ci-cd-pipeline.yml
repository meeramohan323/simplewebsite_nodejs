name: Build, Push, and Deploy to GKE

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 3. Configure Docker to use Google Cloud
      - name: Configure Docker for Google Cloud
        run: |
          gcloud auth configure-docker --quiet

      # 4. Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-image:${{ github.sha }} .

      # 5. Push the Docker image to Google Container Registry (GCR)
      - name: Push Docker image to GCR
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-image:${{ github.sha }}

      # 6. Install kubectl and gke-gcloud-auth-plugin
      - name: Install kubectl and GKE Auth Plugin
        run: |
          # Install kubectl
          sudo apt-get update && sudo apt-get install -y kubectl
          
          # Install gke-gcloud-auth-plugin
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      # 7. Deploy to GKE
      - name: Deploy to GKE
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          # Authenticate kubectl with GKE
          gcloud container clusters get-credentials simple-website-cluster \
            --zone europe-west2-b \
            --project $PROJECT_ID
          
          # Apply Kubernetes configurations for deployment and service
          kubectl apply -f k8s-deployment.yaml
          kubectl apply -f k8s-service.yaml
          
          # Restart deployment to apply changes
          kubectl rollout restart deployment/simple-website-deployment
