name: Build, Push, and Deploy to GKE

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Google Cloud
        run: |
          gcloud auth configure-docker --quiet

      - name: Build Docker image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-image:${{ github.sha }} .

      - name: Push Docker image to GCR
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-image:${{ github.sha }}

      - name: Install kubectl and GKE Auth Plugin
        run: |
          # Download and add the Google Cloud public key to the keyring
          sudo install -o root -g root -m 644 /usr/share/keyrings/cloud.google.gpg /etc/apt/trusted.gpg.d/
          curl -sSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /usr/share/keyrings/cloud.google.gpg > /dev/null

          # Add Google Cloud SDK repository using the new keyring
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list

          # Update package list and install kubectl and Google Cloud SDK
          sudo apt-get update -y
          sudo apt-get install -y kubectl google-cloud-sdk

          # Install gke-gcloud-auth-plugin using gcloud
          gcloud components install gke-gcloud-auth-plugin -q

      - name: Deploy to GKE
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          gcloud container clusters get-credentials simple-website-cluster \
            --zone europe-west2-b \
            --project $PROJECT_ID
          
          # Apply Kubernetes configurations for deployment and service
          kubectl apply -f k8s-deployment.yaml
          kubectl apply -f k8s-service.yaml
          
          # Restart deployment to apply changes
          kubectl rollout restart deployment/simple-website-deployment
